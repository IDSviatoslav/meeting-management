{"version":3,"sources":["Components/MeetingEditor.js","Components/MeetingsView.js","App.js","serviceWorker.js","index.js"],"names":["MeetingEditor","props","url","useState","meetingTime","setMeetingTime","meetingParticipants","setMeetingParticipants","meetingDepartmentId","setMeetingDepartmentId","meetingOrganizer","setMeetingOrganizer","meetingTheme","setMeetingTheme","receivedEmployees","setReceivedEmployees","receivedDepartments","setReceivedDepartments","receivedDepartmentMembers","setReceivedDepartmentMembers","useEffect","getDepartmentsQuery","getEmployeesQuery","workMode","meetingId","getMeetingQuery","fetch","method","headers","then","response","json","catch","err","console","log","event","id","theme","dateString","dateAndTime","split","date","time","Date","convertStringToDate","participants","department","organizer","setSelectValueById","name","members","value","document","getElementById","formatDate","d","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","length","join","class","type","onChange","target","selectedIndex","options","Object","keys","getAttribute","selected","disabled","hidden","map","id-key","organizerId","entry","find","employee","index","indexOf","tempArr","splice","member","key","age","onClick","deleteParticipant","preventDefault","employeeId","selectId","select","getIdFromSelect","methodType","meetParticipantIds","push","requestOptions","body","JSON","stringify","departmentId","participantIds","ok","alert","ViewMeetings","MeetingsView","selectedDepartmentId","selectedEmployeeId","inputTheme","receivedMeetings","setReceivedMeetings","dateRange","setDateRange","getMeetingsQuery","shortName","searchParams","URLSearchParams","append","Number","parseInt","toString","meeting","DisplayMeeting","count","App","setWorkMode","setMeetingId","form","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9928c72f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\n\r\nfunction MeetingEditor(props) {\r\n  const url = \"http://127.0.0.1:8080\";\r\n\r\n  const [meetingTime, setMeetingTime] = useState();\r\n  const [meetingParticipants, setMeetingParticipants] = useState([]);\r\n  const [meetingDepartmentId, setMeetingDepartmentId] = useState();\r\n  const [meetingOrganizer, setMeetingOrganizer] = useState();\r\n  const [meetingTheme, setMeetingTheme] = useState();\r\n\r\n  const [receivedEmployees, setReceivedEmployees] = useState([]);\r\n  const [receivedDepartments, setReceivedDepartments] = useState([]);\r\n  const [receivedDepartmentMembers, setReceivedDepartmentMembers] = useState(\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getDepartmentsQuery();\r\n    getEmployeesQuery();\r\n    if (props.workMode === \"CREATE\") {\r\n    } else if (props.workMode === \"EDIT\" && props.meetingId != null) {\r\n      getMeetingQuery(props.meetingId);\r\n    }\r\n  }, [props.workMode]);\r\n\r\n  const getEmployeesQuery = () => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/employees\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setReceivedEmployees(response);\r\n      })\r\n      .catch((err) => console.log(\"Error \" + err));\r\n  };\r\n\r\n  const getDepartmentsQuery = (event) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/departments\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setReceivedDepartments(response);\r\n      })\r\n      .catch((err) => console.log(\"Error \" + err));\r\n  };\r\n\r\n  const getMeetingQuery = (id) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/meeting\" + \"/\" + id, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setMeetingTheme(response.theme);\r\n        setMeetingTime(convertStringToDate(response.time));\r\n        setMeetingParticipants(response.participants);\r\n        setMeetingDepartmentId(response.department.id);\r\n        setMeetingOrganizer(response.organizer);\r\n        setSelectValueById(\"dep-select\", response.department.name);\r\n        setReceivedDepartmentMembers(response.department.members);\r\n        setSelectValueById(\"org-select\", response.organizer.name);\r\n      })\r\n      .catch((err) => console.log(\"Error \" + err));\r\n  };\r\n\r\n  const createOrUpdateMeetingQuery = (event) => {\r\n    event.preventDefault();\r\n    var methodType = props.workMode === \"CREATE\" ? \"POST\" : \"PUT\";\r\n    var meetParticipantIds = [];\r\n\r\n    if (validateCompletenessOfInput() == false) {\r\n      alert(\"Не все поля заполнены\");\r\n      return;\r\n    }\r\n\r\n    meetingParticipants.map((employee) => meetParticipantIds.push(employee.id));\r\n\r\n    const requestOptions = {\r\n      method: methodType,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: props.meetingId,\r\n        theme: meetingTheme,\r\n        time: formatDate(meetingTime),\r\n        departmentId: meetingDepartmentId,\r\n        organizerId: meetingOrganizer.id,\r\n        participantIds: meetParticipantIds,\r\n      }),\r\n    };\r\n\r\n    fetch(url + \"/meeting\", requestOptions)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          console.log(\"fail\");\r\n          alert(response.json());\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"Error: \" + err));\r\n  };\r\n\r\n  function deleteParticipant(employee) {\r\n    setReceivedEmployees([...receivedEmployees, employee]);\r\n    var index = meetingParticipants.indexOf(employee);\r\n    var tempArr = meetingParticipants;\r\n    if (index !== -1) {\r\n      tempArr.splice(index, 1);\r\n      setMeetingParticipants(tempArr);\r\n    }\r\n  }\r\n\r\n  function getIdFromSelect(selectId) {\r\n    let select = document.getElementById(selectId);\r\n    const selectedIndex = select.selectedIndex;\r\n    return select.options[selectedIndex].getAttribute(\"id-key\");\r\n  }\r\n\r\n  function setSelectValueById(id, value) {\r\n    let select = document.getElementById(id);\r\n    select.value = value;\r\n  }\r\n\r\n  function addEmployeeToMeeting(event) {\r\n    event.preventDefault();\r\n    if (receivedEmployees.length) {\r\n      let employeeId = getIdFromSelect(\"part-select\");\r\n\r\n      var entry = receivedEmployees.find((employee) => {\r\n        return employee.id == employeeId;\r\n      });\r\n\r\n      setMeetingParticipants([...meetingParticipants, entry]);\r\n      var index = receivedEmployees.indexOf(entry);\r\n      var tempArr = receivedEmployees;\r\n      if (index !== -1) {\r\n        tempArr.splice(index, 1);\r\n        setReceivedEmployees(tempArr);\r\n      }\r\n    }\r\n  }\r\n\r\n  function selectDepartment(event) {\r\n    var selectedIndex = event.target.options.selectedIndex;\r\n    setReceivedDepartmentMembers(\r\n      receivedDepartments[Object.keys(receivedDepartments)[selectedIndex - 1]]\r\n        .members\r\n    );\r\n    setMeetingDepartmentId(\r\n      event.target.options[selectedIndex].getAttribute(\"id-key\")\r\n    );\r\n  }\r\n\r\n  function selectOrganizer(event) {\r\n    var selectedIndex = event.target.options.selectedIndex;\r\n    var organizerId = event.target.options[selectedIndex].getAttribute(\r\n      \"id-key\"\r\n    );\r\n\r\n    var entry = receivedEmployees.find((employee) => {\r\n      return employee.id == organizerId;\r\n    });\r\n    setMeetingOrganizer(entry);\r\n\r\n    var index = receivedEmployees.indexOf(entry);\r\n    var tempArr = receivedEmployees;\r\n    if (index !== -1) {\r\n      tempArr.splice(index, 1);\r\n      setReceivedEmployees(tempArr);\r\n    }\r\n  }\r\n\r\n  function changeTheme(event) {\r\n    setMeetingTheme(event.target.value);\r\n  }\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear(),\r\n      hour = \"\" + d.getHours(),\r\n      minute = \"\" + d.getMinutes();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    if (hour.length < 2) hour = \"0\" + hour;\r\n    if (minute.length < 2) minute = \"0\" + minute;\r\n\r\n    return [year, month, day].join(\"-\") + \" \" + [hour, minute].join(\":\");\r\n  }\r\n\r\n  function convertStringToDate(dateString) {\r\n    var dateAndTime = dateString.split(\" \");\r\n    var date = dateAndTime[0].split(\"-\");\r\n    var time = dateAndTime[1].split(\":\");\r\n    var mydate = new Date(date[0], date[1] - 1, date[2], time[0], time[1]);\r\n    return mydate;\r\n  }\r\n\r\n  function validateCompletenessOfInput() {\r\n    return (\r\n      meetingTheme != null &&\r\n      meetingTime != null &&\r\n      meetingDepartmentId != null &&\r\n      meetingOrganizer != null &&\r\n      meetingParticipants != null\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form class=\"flexbox-vertical\">\r\n      <label class=\"flexbox-horizontal\">\r\n        <label class=\"bold-text\">Тема</label>\r\n        <input type=\"text\" onChange={changeTheme} value={meetingTheme} />\r\n      </label>\r\n\r\n      <label class=\"flexbox-horizontal\">\r\n        <label class=\"bold-text\">Время проведения</label>\r\n        <DateTimePicker\r\n          id=\"time-form\"\r\n          value={meetingTime}\r\n          onChange={setMeetingTime}\r\n        />\r\n      </label>\r\n\r\n      <label class=\"flexbox-horizontal\">\r\n        <l1 class=\"bold-text\">Подразделение</l1>\r\n        <select id=\"dep-select\" onChange={selectDepartment}>\r\n          <option value=\"none\" selected disabled hidden>\r\n            Подразделение\r\n          </option>\r\n          {receivedDepartments.map((department) => {\r\n            return <option id-key={department.id}> {department.name}</option>;\r\n          })}\r\n        </select>\r\n      </label>\r\n\r\n      <label class=\"flexbox-horizontal\">\r\n        <l1 class=\"bold-text\">Ответственный</l1>\r\n        <select id=\"org-select\" onChange={selectOrganizer}>\r\n          <option value=\"none\" selected disabled hidden>\r\n            Работник\r\n          </option>\r\n          {receivedDepartmentMembers.map((member) => (\r\n            <option id-key={member.id}>{member.name}</option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <div>\r\n        <l1 id=\"title\">Участники</l1>\r\n        <table id=\"participants\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Имя</th>\r\n              <th>Возраст</th>\r\n              <th>Подразделение</th>\r\n            </tr>\r\n            {meetingParticipants.map((employee) => {\r\n              return (\r\n                <tr key={employee.id}>\r\n                  <td>{employee.name}</td>\r\n                  <td>{employee.age}</td>\r\n                  <td>{employee.department}</td>\r\n                  <td class=\"link\" onClick={() => deleteParticipant(employee)}>\r\n                    удалить\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <label class=\"flexbox-horizontal\">\r\n        <l1 class=\"bold-text\">Участник</l1>\r\n        <select id=\"part-select\">\r\n          <option value=\"none\" selected disabled hidden>\r\n            Выберете участника\r\n          </option>\r\n\r\n          {receivedEmployees.map((employee) => {\r\n            return <option id-key={employee.id}> {employee.name}</option>;\r\n          })}\r\n        </select>\r\n        <button onClick={addEmployeeToMeeting}>Добавить</button>\r\n      </label>\r\n\r\n      <label>\r\n        <button onClick={createOrUpdateMeetingQuery}>Сохранить</button>\r\n        <div class=\"button-divider\" />\r\n        <button onClick={() => props.ViewMeetings()}>\r\n          Назад (не сохранять)\r\n        </button>\r\n      </label>\r\n    </form>\r\n  );\r\n}\r\nexport default MeetingEditor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\n\r\nfunction MeetingsView(props) {\r\n  const url = \"http://127.0.0.1:8080\";\r\n  var selectedDepartmentId;\r\n  var selectedEmployeeId;\r\n  var inputTheme;\r\n\r\n  const [receivedMeetings, setReceivedMeetings] = useState([]);\r\n  const [receivedEmployees, setReceivedEmployees] = useState([]);\r\n  const [receivedDepartments, setReceivedDepartments] = useState([]);\r\n\r\n  const [dateRange, setDateRange] = useState();\r\n\r\n  useEffect(() => {\r\n    getDepartmentsQuery();\r\n    getMeetingsQuery();\r\n    getEmployeesQuery();\r\n  }, []);\r\n\r\n  const getMeetingsQuery = () => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/meetings\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setReceivedMeetings(response);\r\n      })\r\n      .catch((err) => console.log(\"Error \" + err));\r\n  };\r\n\r\n  const getDepartmentsQuery = (event) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/departments\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setReceivedDepartments(response);\r\n      })\r\n      .catch((err) => console.log(\"Error \" + err));\r\n  };\r\n\r\n  const getEmployeesQuery = (event) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/employees\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setReceivedEmployees(response);\r\n      })\r\n      .catch((err) => console.log(\"Error \" + err));\r\n  };\r\n\r\n  const searchQuery = (event) => {\r\n    event.preventDefault();\r\n    inputTheme = document.getElementById(\"theme-input\").value;\r\n    selectedEmployeeId = getIdFromSelect(\"empl-select\");\r\n    selectedDepartmentId = getIdFromSelect(\"dep-select\");\r\n\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const searchParams = new URLSearchParams();\r\n    if (inputTheme !== null) {\r\n      searchParams.append(\"theme\", inputTheme);\r\n    }\r\n    if (typeof dateRange != \"undefined\" && dateRange !== null) {\r\n      searchParams.append(\"dateFrom\", formatDate(dateRange[0]));\r\n      searchParams.append(\"dateTo\", formatDate(dateRange[1]));\r\n    }\r\n    if (selectedDepartmentId !== null) {\r\n      searchParams.append(\r\n        \"departmentId\",\r\n        Number.parseInt(selectedDepartmentId)\r\n      );\r\n    }\r\n    if (selectedEmployeeId !== null) {\r\n      searchParams.append(\"employeeId\", Number.parseInt(selectedEmployeeId));\r\n    }\r\n\r\n    fetch(url + \"/search?\" + searchParams.toString(), requestOptions)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((response) => setReceivedMeetings(response))\r\n      .catch((err) => console.log(\"Error \" + err));\r\n  };\r\n\r\n  function getIdFromSelect(selectId) {\r\n    let select = document.getElementById(selectId);\r\n    const selectedIndex = select.selectedIndex;\r\n    return select.options[selectedIndex].getAttribute(\"id-key\");\r\n  }\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear(),\r\n      hour = \"\" + d.getHours(),\r\n      minute = \"\" + d.getMinutes();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    if (hour.length < 2) hour = \"0\" + hour;\r\n    if (minute.length < 2) minute = \"0\" + minute;\r\n\r\n    return [year, month, day].join(\"-\") + \" \" + [\"00\", \"00\"].join(\":\");\r\n  }\r\n\r\n  return (\r\n    <form class=\"flexbox-vertical\">\r\n      <div class=\"flexbox-horizontal\">\r\n        <div class=\"flexbox-vertical\">\r\n          <label class=\"flexbox-horizontal\">\r\n            <label class=\"bold-text\">Тема</label>\r\n            <input id=\"theme-input\" type=\"text\" />\r\n          </label>\r\n\r\n          <label class=\"flexbox-horizontal\">\r\n            <label class=\"bold-text\">Время проведения: </label>\r\n            <div>\r\n              <DateRangePicker onChange={setDateRange} value={dateRange} />\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"flexbox-vertical\">\r\n          <label class=\"flexbox-horizontal\">\r\n            <label class=\"bold-text\">Подразделение</label>\r\n            <select id=\"dep-select\">\r\n              <option value=\"none\" selected>\r\n                Подразделение\r\n              </option>\r\n              {receivedDepartments.map((department) => {\r\n                return (\r\n                  <option id-key={department.id}> {department.name}</option>\r\n                );\r\n              })}\r\n            </select>\r\n          </label>\r\n\r\n          <label class=\"flexbox-horizontal\">\r\n            <label class=\"bold-text\">С участием</label>\r\n            <select id=\"empl-select\">\r\n              <option value=\"none\" selected>\r\n                Сотрудник\r\n              </option>\r\n              {receivedEmployees.map((employee) => {\r\n                return (\r\n                  <option id-key={employee.id}> {employee.shortName}</option>\r\n                );\r\n              })}\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <label>\r\n        <button onClick={searchQuery}>Применить фильтр</button>\r\n        <div class=\"button-divider\" />\r\n        <button>Показать все</button>\r\n      </label>\r\n\r\n      <div>\r\n        <table id=\"meetingTable\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Время</th>\r\n              <th>Тема</th>\r\n              <th>Подразделение</th>\r\n              <th>Ответственный</th>\r\n              <th>Состав</th>\r\n            </tr>\r\n            {receivedMeetings.map((meeting) => {\r\n              return (\r\n                <tr key={meeting.id}>\r\n                  <td>{meeting.time}</td>\r\n                  <td\r\n                    class=\"link\"\r\n                    onClick={() => props.DisplayMeeting(meeting.id)}\r\n                  >\r\n                    {meeting.theme}\r\n                  </td>\r\n                  <td>{meeting.department.name}</td>\r\n                  <td>{meeting.organizer.shortName}</td>\r\n                  <td>{meeting.count}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <label>\r\n        <button onClick={() => props.DisplayMeeting()}>Добавить новое</button>\r\n      </label>\r\n    </form>\r\n  );\r\n}\r\nexport default MeetingsView;\r\n","import React, { useState } from \"react\";\nimport MeetingEditor from \"./Components/MeetingEditor\";\nimport MeetingsView from \"./Components/MeetingsView\";\n\nfunction App() {\n  const [workMode, setWorkMode] = useState(\"VIEW\");\n  const [meetingId, setMeetingId] = useState();\n\n  function displayMeeting(id) {\n    if (id == null) {\n      setWorkMode(\"CREATE\");\n    } else {\n      setWorkMode(\"EDIT\");\n      setMeetingId(id);\n    }\n  }\n\n  function viewMeetings() {\n    setWorkMode(\"VIEW\");\n  }\n\n  var form =\n    workMode === \"VIEW\" ? (\n      <MeetingsView DisplayMeeting={displayMeeting} />\n    ) : (\n      <MeetingEditor\n        ViewMeetings={viewMeetings}\n        meetingId={meetingId}\n        workMode={workMode}\n      />\n    );\n  return <div className=\"wrapper\">{form}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}